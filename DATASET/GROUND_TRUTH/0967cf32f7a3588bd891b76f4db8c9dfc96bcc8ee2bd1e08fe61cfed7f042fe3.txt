The Cuckoo Sandbox analysis reveals that the malware exhibits advanced evasion, persistence, and injection techniques. Behavioral analysis identifies significant anti-sandbox measures, including delays in execution (antisandbox_sleep) and checks for virtualization (antivm_generic_cpu, antivm_network_adapters). The malware persistently installs itself in the autorun registry (persistence_autorun) and modifies proxy settings (modifies_proxy_wpad) to intercept traffic. Process injection activities (injection_write_memory, injection_runpe) highlight its ability to alter other processes' memory and execution flows. Additionally, it creates new executables (creates_exe, exe_appdata) in sensitive directories, enhancing stealth and survivability.

Network analysis shows extensive UDP communication, including multicast addresses and potential command-and-control (C&C) connections (connects_host). This indicates the malware may engage in reconnaissance or data exfiltration. While no HTTP or DNS traffic was directly observed, the presence of specific hosts suggests latent capabilities for communication with external servers.

Functional intelligence further underscores its complexity. It employs embedded resources in a foreign language (origin_langid) and suspicious buffers containing potential injected code (dumped_buffer). The malware's interaction with system APIs (NtSetContextThread, WriteProcessMemory) reveals attempts to exploit Windows internals for covert operations. Its high score (9.0) and extensive API usage patterns solidify its classification as a sophisticated threat requiring immediate containment and detailed forensic analysis.